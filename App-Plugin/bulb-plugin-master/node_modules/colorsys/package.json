{
  "name": "colorsys",
  "description": "Bidirectional conversions between different colors format like RGB, HSL, HSV and HEX",
  "main": "colorsys.js",
  "version": "1.0.6",
  "authors": [
    "pablo@netbeast.co"
  ],
  "license": "ISC",
  "keywords": [
    "color",
    "colour",
    "rgb",
    "hex",
    "hsv",
    "hsl",
    "converter"
  ],
  "homepage": "https://github.com/netbeast/colorsys",
  "moduleType": [],
  "ignore": [
    "**/.*",
    "node_modules",
    "bower_components",
    "test",
    "tests"
  ],
  "readme": "# colorsys\n\nColorsys is a simple javascript color conversion library that allows conversion between RGB, HSL, HSV and HEX\n\n## install\n\n**With npm**\n```\nnpm install colorsys\n```\n\n**Load on browser or copy paste into your code**\n```\n<script src=\"http://netbeast.github.io/colorsys/browser.js\"></script>\n```\n\n## api\nthe input parameter could be an object `({r: 50, g: 100, b: 0})` or 3 integers `(50, 100, 0)`\n\n```\ncolorsys.rgb_to_hsl({ r: 255, g: 255, b: 255 }) => { h: 0 , s: 0 , l: 100 }\n```\n\naliases: _rgbToHsl_, _rgb2Hsl_\n\n```\ncolorsys.rgb_to_hsv({ r: 255, g: 255, b: 255 }) => { h: 0 , s: 0 , v: 100 }\n```\n\naliases: _rgb2Hsv_, _rgbToHsv_\n\n```\ncolorsys.hsl_to_rgb({ h: 0 , s: 0 , l: 100 }) => { r: 255, g: 255, b: 255 }\n```\n\naliases: _hsl2Rgb_, _hslToRgb_\n\n```\ncolorsys.hsv_to_rgb({ h: 0 , s: 0 , v: 100 }) => { r: 255, g: 255, b: 255 }\n```\n\naliases: _hsv2Rgb_, _hsvToRgb_\n\n```\ncolorsys.rgb_to_hex({ r: 255, g: 255, b: 255 }) => '#ffffff'\n```\n\naliases: _rgb2Hex_, _rgbToHex_\n\n```\ncolorsys.hex_to_rgb('#ffffff') => { r: 255, g: 255, b: 255 }\n```\n\naliases: _hex2Rgb_, _hexToRgb_\n\n```\ncolorsys.hsv_to_hex({ r: 255, g: 255, b: 255 }) => '#ffffff'\n```\n\naliases: _hsv2Hex_, _hsvToHex_\n\n```\ncolorsys.hex_to_hsv('#ffffff') => {h: 0 , s: 0 , v: 100 }\n```\n\naliases: _hex2Hsv_, _hexToHsv_\n\n```\ncolorsys.hsl_to_hex({r: 255, g: 255, b: 255}) => '#ffffff'\n```\n\naliases: _hsl2Hex_, _hslToHex_\n\n```\ncolorsys.hex_to_hsl('#ffffff') => {h: 0 , s: 0 , l: 100 }\n```\n\naliases: _hex2Hsl_, _hexToHsl_\n\n## example\n```\nvar colorsys = require('colorsys')\n\ncolorsys.hex_to_hsv('#ffffff')    //  { h: 0, s: 0, v: 100 }\n\ncolorsys.rgb_to_hsv({r: 255, g: 255, b: 255 }) => { h: 0 , s: 0 , v: 100 }\n```\n\nThere are some formats missing like `YIQ`, `HWB`, `CMYK`, `ansii` and `ansi16`. Please help us to complete this library making a pull request. \n\n## Contact\n* Visit our site [https://netbeast.co](https://netbeast.co)\n* Mail us: staff [at] netbeast.co\n* Report a bug or enter discussion at [issues](https://github.com/netbeast/colorsys/issues)\n* Other resources: [Docs](https://github.com/netbeast/docs/wiki), Netbeast [API](https://github.com/netbeast/API)\n\nThis repo is shared with :heart: from Netbeast IoT regular job translating\nmessages from different devices and aggregating data.\n",
  "readmeFilename": "README.md",
  "gitHead": "959ff4bb2c27243fa98df6e17ed738ae1c511479",
  "_id": "colorsys@1.0.6",
  "scripts": {},
  "_shasum": "9af3617e5585855a01a512b561970f38fa375be8",
  "_from": "colorsys@*"
}
